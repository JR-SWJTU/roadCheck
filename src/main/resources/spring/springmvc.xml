<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

<!-- 注解扫描器:扫描controller，扫描带@controller注解的类-->
<context:component-scan base-package="com.swjtu.roadCheck.web.controller" />

<!-- 注解驱动 -->
<mvc:annotation-driven validator="validator"/>


<!-- 数据校验 -->
<bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <!-- hibernate校验器-->
    <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
    <!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
    <property name="validationMessageSource" ref="messageSource" />
</bean>
<!-- 校验错误信息配置文件 -->
<bean id="messageSource"
      class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <!-- 资源文件名-->
    <property name="basenames">
        <list>
            <value>classpath:resource/CustomValidationMessages</value>
        </list>
    </property>
     <!-- 资源文件编码格式 -->
    <property name="defaultEncoding" value="utf-8" />
    <!-- 对资源文件内容缓存时间，单位秒 -->
    <property name="cacheSeconds" value="120" />
</bean>


<!-- 视图解析器 -->
<bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/WEB-INF/jsp/" />
    <property name="suffix" value=".jsp" />
    <property name="order" value="1" />
</bean>

    <!-- 静态资源处理:资源映射 -->
    <mvc:resources location="/js/" mapping="/js/**" />
    <mvc:resources location="/css/" mapping="/css/**" />
    <mvc:resources location="/libs/" mapping="/libs/**" />
    <mvc:resources location="/source/" mapping="/source/**" />

<!-- 多部分文件上传 -->
<bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="104857600" />
    <property name="maxInMemorySize" value="8096" />
    <property name="defaultEncoding" value="UTF-8"></property>
</bean>

<!--注册异常处理器-->
<bean class="com.swjtu.roadCheck.web.exception.GlobalExceptionHandler"></bean>


    <!--*******************************分割线分割线***************************************************************************************-->
    <!--*******************************定时任务执行配置，每天凌晨1点执行，给参与活动的用户发送参加提醒******************************************-->
    <!--要调度的对象-->
    <bean id="jobBean" class="com.swjtu.roadCheck.timedTask.ExcelDelete"/>
    <!--jobDetail声明Job实例所包含的属性-->
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="jobBean"/>
        <property name="targetMethod" value="execute"/>
        <!--将并发设置为false，即声明Quartz不要并发地执行同一个job定义（这里指特定的job类）的多个实例，即可以并发执行多个jobDetail（多个任务）-->
        <property name="concurrent" value="true"/>
    </bean>

    <bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="jobDetail"/>
        <!--表达式，每天凌晨 执行一次-->
        <property name="cronExpression" value="0 0 1 * * ? "/>
    </bean>

    <!--  总管理类如果将lazy-init='false'那么容器启动就会执行调度程序   -->
    <bean id="startQuertz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
        <property name="triggers">
            <list>
                <!--作业调度器,list下可加入其他的调度器-->
                <ref bean="trigger"/>

            </list>
        </property>
    </bean>

</beans>
